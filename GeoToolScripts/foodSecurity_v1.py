#Import modulesimport sysimport osimport numpy as npimport pandas as pdimport pygalimport arcpyarcpy.env.overwriteOutput = Truearcpy.env.outputCoordinateSystem = arcpy.SpatialReference(3857)def plotFAO(df, iso_code, fao_indicator, itemCodeFS, countrySelection, outputLocation):	arcpy.AddMessage("IN FAO LOOP")	#Select the appropriate indicator	df_selected = df[df["Item Code"] == itemCodeFS]	#color code for plots	customColorStyle = pygal.style.Style(colors = ['#D35400', '#979A9A', '#797D7F', '#5F6A6A', '#515A5A'], title_font_size = 18)	arcpy.AddMessage("added Style")	if itemCodeFS == 21010:		#Creat the line chart plot		line_chart = pygal.Line(title = u"Average Dietary Energy Supply Adequacy - \n" + countrySelection, x_title = "End Year of '3-Year Average'", y_title = "% - 3-Year Average", style = customColorStyle, show_dots = False, stroke_style = {'width': 3}, show_minor_y_labels = True)		line_chart.x_labels = map(str, range(2001, 2018))		#Get just the Value column for the country of interest and the country groupings		country_series = df_selected.loc[df_selected["ISO_code"] == iso_code, "Value"]		#Some countries have no data for some indicators		if country_series.isnull().values.all():			arcpy.AddMessage(countrySelection + " has no data for this food security indicator.")			sys.exit()		low_income_series = df_selected.loc[df_selected["ISO_code"] == "lowestIncome", "Value"]		mid_lower_income_series = df_selected.loc[df_selected["ISO_code"] == "midLowerIncome", "Value"]		mid_upper_income_series = df_selected.loc[df_selected["ISO_code"] == "midUpperIncome", "Value"]		high_income_series = df_selected.loc[df_selected["ISO_code"] == "uppermostIncome", "Value"]		#Add Pd Series to the line chart		line_chart.add(countrySelection, country_series)		line_chart.add("Low-Income", low_income_series)		line_chart.add("Lower-Middle-Income", mid_lower_income_series)		line_chart.add("Upper-Middle-Income", mid_upper_income_series)		line_chart.add("High-Income", high_income_series)		#Output the plot		line_chart.render_to_file(os.path.join(outputLocation, 'test_pygal3.svg'))	if itemCodeFS == 21011:		#Creat the line chart plot		line_chart = pygal.Line(title = u"Average Value of Food Production - \n" + countrySelection, x_title = "End Year of '3-Year Average'", y_title = "Constant International Dollars Per Person - 3-Year Average", style = customColorStyle, show_dots = False, stroke_style = {'width': 3}, show_minor_y_labels = True)		line_chart.x_labels = map(str, range(2001, 2018))		#Get just the Value column for the country of interest and the country groupings		country_series = df_selected.loc[df_selected["ISO_code"] == iso_code, "Value"]		#Some countries have no data for some indicators		if country_series.isnull().values.all():			arcpy.AddMessage(countrySelection + " has no data for this food security indicator.")			sys.exit()		low_income_series = df_selected.loc[df_selected["ISO_code"] == "lowestIncome", "Value"]		mid_lower_income_series = df_selected.loc[df_selected["ISO_code"] == "midLowerIncome", "Value"]		mid_upper_income_series = df_selected.loc[df_selected["ISO_code"] == "midUpperIncome", "Value"]		high_income_series = df_selected.loc[df_selected["ISO_code"] == "uppermostIncome", "Value"]		#Add Pd Series to the line chart		line_chart.add(countrySelection, country_series)		line_chart.add("Low-Income", low_income_series)		line_chart.add("Lower-Middle-Income", mid_lower_income_series)		line_chart.add("Upper-Middle-Income", mid_upper_income_series)		line_chart.add("High-Income", high_income_series)		#Output the plot		line_chart.render_to_file(os.path.join(outputLocation, 'test_pygal3.svg'))	if itemCodeFS == 21012:		#Creat the line chart plot		line_chart = pygal.Line(title = u"Share of Dietary Energy Supply Derived from Cereals, Roots, and Tubers - \n" + countrySelection, x_title = "End Year of '3-Year Average'", y_title = "% - 3-Year Average", style = customColorStyle, show_dots = False, stroke_style = {'width': 3}, show_minor_y_labels = True)		line_chart.x_labels = map(str, range(2001, 2018))		#Get just the Value column for the country of interest and the country groupings		country_series = df_selected.loc[df_selected["ISO_code"] == iso_code, "Value"]		#Some countries have no data for some indicators		if country_series.isnull().values.all():			arcpy.AddMessage(countrySelection + " has no data for this food security indicator.")			sys.exit()		low_income_series = df_selected.loc[df_selected["ISO_code"] == "lowestIncome", "Value"]		mid_lower_income_series = df_selected.loc[df_selected["ISO_code"] == "midLowerIncome", "Value"]		mid_upper_income_series = df_selected.loc[df_selected["ISO_code"] == "midUpperIncome", "Value"]		high_income_series = df_selected.loc[df_selected["ISO_code"] == "uppermostIncome", "Value"]		#Add Pd Series to the line chart		line_chart.add(countrySelection, country_series)		line_chart.add("Low-Income", low_income_series)		line_chart.add("Lower-Middle-Income", mid_lower_income_series)		line_chart.add("Upper-Middle-Income", mid_upper_income_series)		line_chart.add("High-Income", high_income_series)		#Output the plot		line_chart.render_to_file(os.path.join(outputLocation, 'test_pygal3.svg'))	if itemCodeFS == 21013:		#Creat the line chart plot		line_chart = pygal.Line(title = u"Average Protein Supply - \n" + countrySelection, x_title = "End Year of '3-Year Average'", y_title = "Grams per Capita per Day - 3-Year Average", style = customColorStyle, show_dots = False, stroke_style = {'width': 3}, show_minor_y_labels = True)		line_chart.x_labels = map(str, range(2001, 2018))		#Get just the Value column for the country of interest and the country groupings		country_series = df_selected.loc[df_selected["ISO_code"] == iso_code, "Value"]		#Some countries have no data for some indicators		if country_series.isnull().values.all():			arcpy.AddMessage(countrySelection + " has no data for this food security indicator.")			sys.exit()		low_income_series = df_selected.loc[df_selected["ISO_code"] == "lowestIncome", "Value"]		mid_lower_income_series = df_selected.loc[df_selected["ISO_code"] == "midLowerIncome", "Value"]		mid_upper_income_series = df_selected.loc[df_selected["ISO_code"] == "midUpperIncome", "Value"]		high_income_series = df_selected.loc[df_selected["ISO_code"] == "uppermostIncome", "Value"]		#Add Pd Series to the line chart		line_chart.add(countrySelection, country_series)		line_chart.add("Low-Income", low_income_series)		line_chart.add("Lower-Middle-Income", mid_lower_income_series)		line_chart.add("Upper-Middle-Income", mid_upper_income_series)		line_chart.add("High-Income", high_income_series)		#Output the plot		line_chart.render_to_file(os.path.join(outputLocation, 'test_pygal3.svg'))	if itemCodeFS == 21014:		#Creat the line chart plot		line_chart = pygal.Line(title = u"Average Supply of Protein of Animal Origin - \n" + countrySelection, x_title = "End Year of '3-Year Average'", y_title = "Grams per Capita per Day - 3-Year Average", style = customColorStyle, show_dots = False, stroke_style = {'width': 3}, show_minor_y_labels = True)		line_chart.x_labels = map(str, range(2001, 2018))		#Get just the Value column for the country of interest and the country groupings		country_series = df_selected.loc[df_selected["ISO_code"] == iso_code, "Value"]		#Some countries have no data for some indicators		if country_series.isnull().values.all():			arcpy.AddMessage(countrySelection + " has no data for this food security indicator.")			sys.exit()		low_income_series = df_selected.loc[df_selected["ISO_code"] == "lowestIncome", "Value"]		mid_lower_income_series = df_selected.loc[df_selected["ISO_code"] == "midLowerIncome", "Value"]		mid_upper_income_series = df_selected.loc[df_selected["ISO_code"] == "midUpperIncome", "Value"]		high_income_series = df_selected.loc[df_selected["ISO_code"] == "uppermostIncome", "Value"]		#Add Pd Series to the line chart		line_chart.add(countrySelection, country_series)		line_chart.add("Low-Income", low_income_series)		line_chart.add("Lower-Middle-Income", mid_lower_income_series)		line_chart.add("Upper-Middle-Income", mid_upper_income_series)		line_chart.add("High-Income", high_income_series)		#Output the plot		line_chart.render_to_file(os.path.join(outputLocation, 'test_pygal3.svg'))	if itemCodeFS == 21016:		#Creat the line chart plot		line_chart = pygal.Line(title = u"Rail-Lines Density - \n" + countrySelection, x_title = "Year", y_title = "Density per 100 Square Kilometer of Land Area", style = customColorStyle, show_dots = False, stroke_style = {'width': 3}, show_minor_y_labels = True)		line_chart.x_labels = map(str, range(2000, 2017))		#Get just the Value column for the country of interest and the country groupings		country_series = df_selected.loc[df_selected["ISO_code"] == iso_code, "Value"]		#Some countries have no data for some indicators		if country_series.isnull().values.all():			arcpy.AddMessage(countrySelection + " has no data for this food security indicator.")			sys.exit()		low_income_series = df_selected.loc[df_selected["ISO_code"] == "lowestIncome", "Value"]		mid_lower_income_series = df_selected.loc[df_selected["ISO_code"] == "midLowerIncome", "Value"]		mid_upper_income_series = df_selected.loc[df_selected["ISO_code"] == "midUpperIncome", "Value"]		high_income_series = df_selected.loc[df_selected["ISO_code"] == "uppermostIncome", "Value"]		#Add Pd Series to the line chart		line_chart.add(countrySelection, country_series)		line_chart.add("Low-Income", low_income_series)		line_chart.add("Lower-Middle-Income", mid_lower_income_series)		line_chart.add("Upper-Middle-Income", mid_upper_income_series)		line_chart.add("High-Income", high_income_series)		#Output the plot		line_chart.render_to_file(os.path.join(outputLocation, 'test_pygal3.svg'))	if itemCodeFS == 22013:		#Creat the line chart plot		line_chart = pygal.Line(title = u"Gross Domestic Product per Capita, PPP - \n" + countrySelection, x_title = "Year", y_title = "Constant 2011 International Dollars", style = customColorStyle, show_dots = False, stroke_style = {'width': 3}, show_minor_y_labels = True)		line_chart.x_labels = map(str, range(2000, 2017))		#Get just the Value column for the country of interest and the country groupings		country_series = df_selected.loc[df_selected["ISO_code"] == iso_code, "Value"]		#Some countries have no data for some indicators		if country_series.isnull().values.all():			arcpy.AddMessage(countrySelection + " has no data for this food security indicator.")			sys.exit()		low_income_series = df_selected.loc[df_selected["ISO_code"] == "lowestIncome", "Value"]		mid_lower_income_series = df_selected.loc[df_selected["ISO_code"] == "midLowerIncome", "Value"]		mid_upper_income_series = df_selected.loc[df_selected["ISO_code"] == "midUpperIncome", "Value"]		high_income_series = df_selected.loc[df_selected["ISO_code"] == "uppermostIncome", "Value"]		#Add Pd Series to the line chart		line_chart.add(countrySelection, country_series)		line_chart.add("Low-Income", low_income_series)		line_chart.add("Lower-Middle-Income", mid_lower_income_series)		line_chart.add("Upper-Middle-Income", mid_upper_income_series)		line_chart.add("High-Income", high_income_series)		#Output the plot		line_chart.render_to_file(os.path.join(outputLocation, 'test_pygal3.svg'))	if itemCodeFS == 21004:		#Creat the line chart plot		line_chart = pygal.Line(title = "Prevalence of Undernourishment - \n" + countrySelection, x_title = "End Year of '3-Year Average'", y_title = "% - 3-Year Average", style = customColorStyle, show_dots = False, stroke_style = {'width': 3}, show_minor_y_labels = True)		line_chart.x_labels = map(str, range(2001, 2018))		#Get just the Value column for the country of interest and the country groupings		country_series = df_selected.loc[df_selected["ISO_code"] == iso_code, "Value"]		#Some countries have no data for some indicators		if country_series.isnull().values.all():			arcpy.AddMessage(countrySelection + " has no data for this food security indicator.")			sys.exit()		low_income_series = df_selected.loc[df_selected["ISO_code"] == "lowestIncome", "Value"]		mid_lower_income_series = df_selected.loc[df_selected["ISO_code"] == "midLowerIncome", "Value"]		mid_upper_income_series = df_selected.loc[df_selected["ISO_code"] == "midUpperIncome", "Value"]		high_income_series = df_selected.loc[df_selected["ISO_code"] == "uppermostIncome", "Value"]		#Add Pd Series to the line chart		line_chart.add(countrySelection, country_series)		line_chart.add("Low-Income", low_income_series)		line_chart.add("Lower-Middle-Income", mid_lower_income_series)		line_chart.add("Upper-Middle-Income", mid_upper_income_series)		line_chart.add("High-Income", high_income_series)		#Output the plot		line_chart.render_to_file(os.path.join(outputLocation, 'test_pygal3.svg'))	if itemCodeFS == 21023:		#Creat the line chart plot		line_chart = pygal.Line(title = "Depth of the Food Deficit - \n" + countrySelection, x_title = "End Year of '3-Year Average'", y_title = "Kilocalories per Capita per Day", style = customColorStyle, show_dots = False, stroke_style = {'width': 3}, show_minor_y_labels = True)		line_chart.x_labels = map(str, range(2001, 2018))		#Get just the Value column for the country of interest and the country groupings		country_series = df_selected.loc[df_selected["ISO_code"] == iso_code, "Value"]		#Some countries have no data for some indicators		if country_series.isnull().values.all():			arcpy.AddMessage(countrySelection + " has no data for this food security indicator.")			sys.exit()		low_income_series = df_selected.loc[df_selected["ISO_code"] == "lowestIncome", "Value"]		mid_lower_income_series = df_selected.loc[df_selected["ISO_code"] == "midLowerIncome", "Value"]		mid_upper_income_series = df_selected.loc[df_selected["ISO_code"] == "midUpperIncome", "Value"]		high_income_series = df_selected.loc[df_selected["ISO_code"] == "uppermostIncome", "Value"]		#Add Pd Series to the line chart		line_chart.add(countrySelection, country_series)		line_chart.add("Low-Income", low_income_series)		line_chart.add("Lower-Middle-Income", mid_lower_income_series)		line_chart.add("Upper-Middle-Income", mid_upper_income_series)		line_chart.add("High-Income", high_income_series)		#Output the plot		line_chart.render_to_file(os.path.join(outputLocation, 'test_pygal3.svg'))def foodSecurity_v1():	#FAO Data	fao_clean = "C:\\Users\\Paul McCord\\Google Drive\\Toolbox\\Tool_First\\FoodSecurity\\Content_Post052418\\Data_Tabular\\FAOSTAT\\fao_clean.csv"	#Country ISO codes	country_iso_csv = "C:\\Users\\Paul McCord\\Google Drive\\Toolbox\\Tool_First\\FoodSecurity\\Content_Post052418\\Data_Tabular\\country_codes\\FAO_Area_Export.csv"	#Set tool parameters	#Local variables	out_src_FeatureSet = r"in_memory\src_feature_set"	#User specified parameters	src_FeatureSet = arcpy.GetParameterAsText(0)	countrySelection = arcpy.GetParameterAsText(1)	fao_indicator = arcpy.GetParameterAsText(2)	outputLocation = arcpy.GetParameterAsText(3)	try:		#Save the Feature Set to Feature Layer		arcpy.MakeFeatureLayer_management(src_FeatureSet, out_src_FeatureSet)		aoi = arcpy.CopyFeatures_management(out_src_FeatureSet, os.path.join(arcpy.env.scratchFolder, "AOI_layer.shp"))				#Obtain the country ISO code to avoid formatting problems with country name		df_iso = pd.read_csv(country_iso_csv)		countryDF = df_iso[df_iso["Area"] == countrySelection]		iso_code = countryDF["ISO_code"].iloc[0]		arcpy.AddMessage("country: " + countrySelection + ", code: " + iso_code)		arcpy.AddMessage(iso_code)				#Obtain the Item Code and Item Description selected by the user		if fao_indicator == "Average dietary energy supply adequacy (%) (3-year average)":			itemCodeFS = 21010		if fao_indicator == "Average value of food production (constant I$ per person) (3-year average)":			itemCodeFS = 21011		if fao_indicator == "Share of dietary energy supply derived from cereals, roots and tubers (%) (3-year average)":			itemCodeFS = 21012		if fao_indicator == "Average protein supply (g/capita/day) (3-year average)":			itemCodeFS = 21013		if fao_indicator == "Average supply of protein of animal origin (g/capita/day) (3-year average)":			itemCodeFS = 21014		if fao_indicator == "Rail-lines density (per 100 square km of land area)":			itemCodeFS = 21016		if fao_indicator == "Gross domestic product per capita, PPP (constant 2011 international $)":			itemCodeFS = 22013		if fao_indicator == "Prevalence of undernourishment (%) (3-year average)":			itemCodeFS = 21004		if fao_indicator == "Depth of the food deficit (kcal/capita/day) (3-year average)":			itemCodeFS = 21023				#Select FAO Food Security information of interest		df = pd.read_csv(fao_clean, dtype = {"Area": "S100", "Area Code": "f8", "Element": "S25", "Element Code": "f8", "Flag": "S25", 											"Flag Description": "S25", "ISO_code": "S25", "Item": "S150", "Item Code": "i4", "Unit": "S25", 											"Value": "f8", "Year": "S25", "Year Code": "f8", "YearEnd": "i4"})				plotFAO(df, iso_code, fao_indicator, itemCodeFS, countrySelection, outputLocation)		#test output layer		arcpy.SetParameter(4, aoi)		#arcpy.SetParameter(4, fig)				except Exception:		e = sys.exc_info()[1]		arcpy.AddError('An error occurred: {}'.format(e.args[0]))	if __name__ == '__main__':	foodSecurity_v1()	del pygal